#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "Updated_Auto_Greenhouse"
  https://create.arduino.cc/cloud/things/747abf2d-2621-4053-bb8c-82efde76bac3

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String Display_Statue_Fish;
  String Display_Statue_Hydro;
  String Display_Statue_Hydro_Reservoir;
  String Display_Statue_Soil;
  String Display_Statue_Soil_Reservoir;
  String Error_Message;
  String Full_Eastern_Date;
  String Full_Eastern_Time;
  String Serial_Output;
  String Test_Run;
  float Fish_Level;
  float Fish_Temperature_Sensor_1_C;
  float Fish_Temperature_Sensor_1_H;
  float Hydro_Level;
  float Hydro_Reservoir_Level;
  float Hydro_Temperature_Sensor_1_C;
  float Hydro_Temperature_Sensor_1_H;
  float Soil_Level;
  float Soil_Reservoir_Level;
  float Soil_Temperature_Sensor_1_C;
  float Soil_Temperature_Sensor_1_H;
  int Fish_Humidity_Set_Point;
  int Fish_Humidity_Variance;
  int Fish_Temperature_Set_Point;
  int Fish_Temperature_Variance;
  int Flooding_Duration;
  int Flooding_Frequency;
  int Hydro_Humidity_Set_Point;
  int Hydro_Humidity_Variance;
  int Hydro_Temperature_Set_Point;
  int Hydro_Temperature_Variance;
  int Set_Mode;
  int Soil_Humidity_Set_Point;
  int Soil_Humidity_Variance;
  int Soil_Temperature_Set_Point;
  int Soil_Temperature_Variance;
  int Water_Pump_Speed_Percentage_1;
  int Water_Pump_Speed_Percentage_2;
  int Water_Pump_Speed_Percentage_3;
  int Water_Pump_Speed_Percentage_4;
  int Water_Pump_Speed_Percentage_5;
  bool Alert_Fish_Statue;
  bool Alert_Hydro_Statue;
  bool Alert_Soil_Statue;
  bool Hydro_Unit_Fan;
  bool Hydro_Unit_Heater;
  bool Light_Statue_Fish;
  bool Light_Statue_Hydro;
  bool Light_Statue_Soil;
  bool Manual;
  bool Soil_Unit_Fan;
  bool Soil_Unit_Heater;
  CloudTime Preset_Fish_End;
  CloudTime Preset_Fish_Start;
  CloudTime Preset_Hydro_End;
  CloudTime Preset_Hydro_Start;
  CloudTime Preset_Soil_End;
  CloudTime Preset_Soil_Start;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Arduino_PortentaBreakout.h>
#include "Temperature_Control.h"
#include "Water_Control.h"
#include "Lighting_Control.h"
#include "LED_Display.h"

int Reponse_Time = 0, Reponse_Timer_Start = 0, Reponse_Timer_End = 0; 
int Disconnect_Timer = 0, Disconnect_Timer_Start = 0, Disconnect_Timer_Stop = 0;
bool Disconnect_Timer_Statue = false;

void setup()
{
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  Wire.begin();
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);
  
  Setup_Temperature_Humidity_Sensors();
  
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  
    /*The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4*/
  
  setDebugMessageLevel(4);
  ArduinoCloud.printDebugInfo();
}

void loop()
{
  ArduinoCloud.update();
  // Your code here
  
  Error_Message = "";
  
  Read_Temperature_Humidity_Data();
  Read_Water_Level();
  Read_Date_And_Time();
  
  Fish_Light_Control();
  Hydro_Light_Control();
  Soil_Light_Control();
  
  Temperature_Alerts();
  Humidity_Alerts();
  
  Soil_Heater_Fan_Controls();
  Hydro_Heater_Fan_Controls();
  
  
  Determine_Water_Column();
  Watering_Soil_Unit();
  
  if (Manual == false)
  {
    Flooding_Mode();
  }
  Water_Pump_Control();
  
  Water_Level_Alerts();
  
  Display_Water_Data();
  Display_Temperature_Humidity_Data();
  Display_Time_Date();
  Display_Light_Statue();
  
/*  Data_Reading();
  Transmit_Data();*/
  
  

  delay (2000);
}
