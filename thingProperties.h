// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char SSID[]     = SECRET_SSID;    // Network SSID (name)
const char PASS[]     = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)

String Display_Statue_Fish;
String Display_Statue_Hydro;
String Display_Statue_Hydro_Reservoir;
String Display_Statue_Soil;
String Display_Statue_Soil_Reservoir;
String Error_Message;
String Full_Eastern_Date;
String Full_Eastern_Time;
String Serial_Output;
String Test_Run;
float Fish_Level;
float Fish_Temperature_Sensor_1_C;
float Fish_Temperature_Sensor_1_H;
float Hydro_Level;
float Hydro_Reservoir_Level;
float Hydro_Temperature_Sensor_1_C;
float Hydro_Temperature_Sensor_1_H;
float Soil_Level;
float Soil_Reservoir_Level;
float Soil_Temperature_Sensor_1_C;
float Soil_Temperature_Sensor_1_H;
int Fish_Humidity_Set_Point;
int Fish_Humidity_Variance;
int Fish_Temperature_Set_Point;
int Fish_Temperature_Variance;
int Flooding_Duration;
int Flooding_Frequency;
int Hydro_Humidity_Set_Point;
int Hydro_Humidity_Variance;
int Hydro_Temperature_Set_Point;
int Hydro_Temperature_Variance;
int Set_Mode;
int Soil_Humidity_Set_Point;
int Soil_Humidity_Variance;
int Soil_Temperature_Set_Point;
int Soil_Temperature_Variance;
int Water_Pump_Speed_Percentage_1;
int Water_Pump_Speed_Percentage_2;
int Water_Pump_Speed_Percentage_3;
int Water_Pump_Speed_Percentage_4;
int Water_Pump_Speed_Percentage_5;
bool Alert_Fish_Statue;
bool Alert_Hydro_Statue;
bool Alert_Soil_Statue;
bool Hydro_Unit_Fan;
bool Hydro_Unit_Heater;
bool Light_Statue_Fish;
bool Light_Statue_Hydro;
bool Light_Statue_Soil;
bool Manual;
bool Soil_Unit_Fan;
bool Soil_Unit_Heater;
CloudTime Preset_Fish_End;
CloudTime Preset_Fish_Start;
CloudTime Preset_Hydro_End;
CloudTime Preset_Hydro_Start;
CloudTime Preset_Soil_End;
CloudTime Preset_Soil_Start;

void initProperties(){

  ArduinoCloud.addProperty(Display_Statue_Fish, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Display_Statue_Hydro, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Display_Statue_Hydro_Reservoir, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Display_Statue_Soil, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Display_Statue_Soil_Reservoir, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Error_Message, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Full_Eastern_Date, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Full_Eastern_Time, READ, ON_CHANGE, NULL, 1);
  ArduinoCloud.addProperty(Serial_Output, READWRITE, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(Test_Run, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Fish_Level, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Fish_Temperature_Sensor_1_C, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Fish_Temperature_Sensor_1_H, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Level, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Reservoir_Level, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Temperature_Sensor_1_C, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Temperature_Sensor_1_H, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Level, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Reservoir_Level, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Temperature_Sensor_1_C, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Temperature_Sensor_1_H, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Fish_Humidity_Set_Point, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Fish_Humidity_Variance, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Fish_Temperature_Set_Point, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Fish_Temperature_Variance, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Flooding_Duration, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Flooding_Frequency, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Humidity_Set_Point, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Humidity_Variance, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Temperature_Set_Point, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Temperature_Variance, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Set_Mode, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Humidity_Set_Point, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Humidity_Variance, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Temperature_Set_Point, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Temperature_Variance, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Water_Pump_Speed_Percentage_1, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Water_Pump_Speed_Percentage_2, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Water_Pump_Speed_Percentage_3, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Water_Pump_Speed_Percentage_4, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Water_Pump_Speed_Percentage_5, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Alert_Fish_Statue, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Alert_Hydro_Statue, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Alert_Soil_Statue, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Unit_Fan, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Hydro_Unit_Heater, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Light_Statue_Fish, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Light_Statue_Hydro, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Light_Statue_Soil, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Manual, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Unit_Fan, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Soil_Unit_Heater, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Preset_Fish_End, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Preset_Fish_Start, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Preset_Hydro_End, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Preset_Hydro_Start, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Preset_Soil_End, READWRITE, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(Preset_Soil_Start, READWRITE, 1 * SECONDS, NULL);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
